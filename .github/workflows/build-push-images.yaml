name: Build and Push Images

on:
  push:
    branches:
      - main

jobs:
  generate-matrix:
    name: Generate matrix
    runs-on: ubuntu-latest
    outputs:
      include: ${{ steps.set-matrix.outputs.include }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Parse versions.yaml
        id: set-matrix
        run: |
          include=$(cat versions.yaml| yq -o=json '.' -I 0)
          echo "include=$include" >> "$GITHUB_OUTPUT"

  build-and-push:
    needs: generate-matrix
    runs-on: ubuntu-latest
    name: ${{ matrix.name }}
    strategy:
      matrix:
        include: ${{ fromJson(needs.generate-matrix.outputs.include) }}
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        id: push
        with:
          context: ${{ matrix.context }}
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ matrix.version }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:latest
            plmercereau/${{ matrix.name }}:${{ matrix.version }}
            plmercereau/${{ matrix.name }}:latest
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
